name: Test Auth Guards and Decorators

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/src/modules/auth/**'
      - 'backend/src/modules/users/**'
      - '.github/workflows/test-auth-guards.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/src/modules/auth/**'
      - 'backend/src/modules/users/**'
      - '.github/workflows/test-auth-guards.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wastewise_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: Install dependencies
        working-directory: backend
        run: npm ci

      - name: Lint
        working-directory: backend
        run: npm run lint:check

      - name: Type check
        working-directory: backend
        run: npx tsc --noEmit

      - name: Run tests for auth module
        working-directory: backend
        run: npm run test:auth
        env:
          NODE_ENV: test
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_NAME: wastewise_test
          JWT_SECRET: test_secret
          JWT_EXPIRES_IN: 1h
          JWT_REFRESH_EXPIRES_IN: 7d
          JWT_ALGORITHM: HS256

      - name: Run tests for guards and decorators
        working-directory: backend
        run: npm test -- --testPathPattern="auth/(guards|decorators)"
        env:
          NODE_ENV: test
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_NAME: wastewise_test
          JWT_SECRET: test_secret
          JWT_EXPIRES_IN: 1h
          JWT_REFRESH_EXPIRES_IN: 7d
          JWT_ALGORITHM: HS256

      - name: Generate test coverage
        working-directory: backend
        run: npm run test:cov -- --testPathPattern="auth/(guards|decorators)"
        env:
          NODE_ENV: test
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_NAME: wastewise_test
          JWT_SECRET: test_secret
          JWT_EXPIRES_IN: 1h
          JWT_REFRESH_EXPIRES_IN: 7d
          JWT_ALGORITHM: HS256

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./backend/coverage
          flags: auth-guards-decorators
          name: auth-guards-decorators
          fail_ci_if_error: true
          verbose: true
