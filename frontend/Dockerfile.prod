# Dockerfile pentru mediul de producție
# Etapa 1: Build
FROM node:20-alpine AS build

# Setăm directorul de lucru
WORKDIR /app

# Instalăm dependențele necesare pentru build
RUN apk add --no-cache git

# Copiem package.json și package-lock.json pentru a instala dependențele
COPY package*.json ./

# Instalăm dependențele cu flag-ul legacy-peer-deps pentru a rezolva conflictele
RUN npm ci --legacy-peer-deps

# Copiem restul codului sursă
COPY . .

# Construim aplicația pentru producție
RUN npm run build

# Etapa 2: Servire cu Nginx
FROM nginx:stable-alpine

# Copiem fișierele de configurare Nginx
COPY --from=build /app/nginx/nginx.conf /etc/nginx/conf.d/default.conf

# Copiem fișierele statice generate în etapa de build
COPY --from=build /app/dist /usr/share/nginx/html

# Expunem portul 80
EXPOSE 80

# Comanda pentru pornirea Nginx
CMD ["nginx", "-g", "daemon off;"]
